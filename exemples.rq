#Voir à la maison pour compléter cela.


#Sélection toute simple
prefix custom: <http://localhost/>

SELECT ?subject ?predicate ?object
FROM custom:general
WHERE {
  ?subject ?predicate ?object
}
LIMIT 25

#Sélection avec prédicat : sénateurs en fonction
PREFIX custom: <http://localhost/>
PREFIX schema: <http://schema.org/>

SELECT ?subject
FROM custom:general
WHERE {
  ?subject custom:actif true
}
# (Il y a bien 348 résultats.)

#Sélection groupée : nombre total de sénateurs ayant appartenu à chaque groupe politique
PREFIX custom: <http://localhost/>
PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?GP (count(distinct(?s)) as ?compteur)
FROM custom:histoGroupes
WHERE {
  ?s schema:affiliation [rdf:value ?GP]
}
GROUP BY ?GP
ORDER BY DESC(?compteur)

#Donc pour avoir les groupes politiques, de seulement les sénateurs actifs... ça va pas être si simple que ça
#histoGroupe.ttl liste les appartenances courantes, ET passées des sénateurs, il faut prendre des triples tel que X rdf:endDate Y n'existe pas.

# Groupes politiques par nombre
PREFIX custom: <http://localhost/>
PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?GP (count(distinct(?s)) as ?nbSénateurs)
FROM custom:histoGroupes
where {
  ?s schema:affiliation ?x .
  ?x rdf:value ?GP
  filter not exists {
    ?x schema:endDate ?ed
  }
}
group by ?GP
order by desc(?nbSénateurs)

#Si on fait cela "correctement":
PREFIX custom: <http://localhost/>
PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?GP (count(?s)as ?compteur)
FROM <http://example/general>
FROM <http://example/histoGroupes>
WHERE {
  ?s custom:actif true;# ?s represente l'id matricule
     schema:affiliation ?x .
  ?x rdf:value ?GP .
  FILTER NOT EXISTS {
    ?x schema:endDate ?y .
  }
}
GROUP BY ?GP
ORDER BY DESC(?compteur)